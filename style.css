/*====== RESET =============================*/
/*Configurações de margem para todos os seletores*/
* {
  margin: 0;
  padding: 0;
  /*Configuração da forma como o tamanho de um objeto será atribuída ao definirmos wideth e height*/
  box-sizing: border-box;
}

ul {
  list-style: none; /*Retira os pontinhos das listas que forem criadas*/
}

/*Anulamento da decoração automática dada aos links no HTML*/
a {
  text-decoration: none;
}

/*Definimos para toda tag img que não tenha nenhum referência abaixo dessa um tamanho de 100% e uma alturaque se ajuste a isso*/
img {
  width: 100%;
  height: auto;
}

/*===== VARIABLES ====================================*/
:root {
  --header-height: 4.5rem;

  /* colors */
  --hue: 270;
  /*HSL Color Mode*/
  --base-color: hsl(var(--hue) 83% 63%);
  --base-color-second: hsl(var(--hue) 22% 83%);
  --base-color-alt: hsl(var(--hue) 57% 53%);
  --title-color: hsl(var(--hue) 41% 10%);
  --text-color: hsl(0 0% 46%);
  --text-color-light: hsl(0 0% 98%);
  --body-color: hsl(0 0% 98%);
}

/*======== BASE =====================*/
/*Deginições padrões para todo body com suavização*/
body {
  font: 400 1rem 'Open Sans', sans-serif;
  color: var(--text-color);
  background: var(--body-color);
  -webkit-font-smoothing: antialiased;
}

/*Deginições padrões para todos os títulos*/
.title {
  font: 700 1.875rem 'Roboto', sans-serif;
  color: var(--title-color);
  -webkit-font-smoothing: auto;
}

.button {
  background-color: var(--base-color);
  color: var(--text-color-light);
  height: 3.5rem;
  /*Como a tag a define as margens coladas no elemento, mudamos o display para que as margens do button não ficassem coladas nele*/
  display: inline-flex;
  /*Alinhamento do texto(elemento dentro do button) no centro*/
  align-items: center;
  /*Definição de espaçamento lateral do button*/
  padding: 0 2rem;
  /*filetes (radius) das bordas do button*/
  border-radius: 0.25rem;
  font: 600 1rem 'Open Sans', sans-serif;
  /*Tempo que dura a transição ao posicionar mouse no button*/
  transition: background 0.3s;
}

/*Efeito de transição ao botar mouse sobre o button*/
.button:hover {
  /*Sugestão: testa outros efeitos que não estejam ligados a background*/
  /*cor final após o efeito de transição aplicado sobre o button*/
  background: var(--base-color-alt);
}

/*divisor entre seções*/
.divider-1 {
  height: 1px;
  background: linear-gradient(
    /*direção do gradiente*/ 270deg,
    /*cor inicial*/ hsla(var(--hue), 36%, 57%, 1) 0%,
    /*cor final*/ hsla(var(--hue), 65%, 88%, 0.34) 100%
  );
}
/*===== LAYOUT ===============================*/
/*definições de margem dos elementos dentro da classe container*/
.container {
  margin-left: 1.5rem;
  margin-right: 1.5rem;
}

.grid {
  /*estabelece um espaçamento padrão entre elementos*/
  display: grid;
  gap: 2rem;
}

.section {
  /*definção de espaçamento vertical para elementos dentro da classe section*/
  padding: 5rem 0;
}

/*Configuração do header com a ID header atribuída a ele*/
#header {
  /*linha que separa o header do resto*/
  border-bottom: 1px solid #e4e4e4;
  /*Acredito que esse margin bottom possa ser eliminado uma vez que o header está acima dos outros elementos*/
  margin-bottom: 2rem;
  display: flex;

  /*Configuração para que o header esteja sempre acima dos outros elementos e se mova junto com a página*/
  width: 100%;
  position: fixed; /*comando faz com que o header fique uma camada acima dos demais elementos*/
  top: 0;
  left: 0;
  z-index: 100;
  background-color: var(--body-color);
}

.logo {
  /*fonte e cor base da logo*/
  font: 700 1.31rem 'Roboto', sans-serif;
  color: var(--title-color);
}

.logo span {
  /*cor do elemento spam dentro da logo. Assim colorimos uma unicasentença com várias cores*/
  color: var(--base-color);
}

main {
  /*como header está acima do resto, tivemos que estabelecer uma margem do topo*/
  margin-top: calc(var(--header-height) + 2rem);
}

/*====== NAVIGATION ====================*/
nav {
  /*define altura que os elementos dentro do nav ocupam, automaticamente definindo a do header*/
  height: var(--header-height);
  display: flex;
  /*align e justify fazem comque a logo e o menu estejam no centro e em cantos opostos*/
  align-items: center;
  justify-content: space-between;
  width: 100%;
}

nav ul li {
  text-align: center; /*alinhamento texto hamburguer menu*/
}

nav ul li a {
  transition: color 0.2s; /*o color está especificando qual propriedade deve estar ligada a essa transição*/
  position: relative;
}

nav ul li a:hover {
  color: var(--base-color);
}

nav ul li a::after {
  content: '';
  height: 2px;
  width: 0;

  background: var(--base-color);
  /*As definições de tamanho acima são referentes ao elemento que será criado*/
  position: absolute;
  left: 0;
  bottom: -1.5rem; /*Essa distância representa a distância que a linha vai ficar da tela tanto no mobile quanto no desktop*/
  transition: width 0.2s;
}

nav ul li a:hover::after {
  width: 100%;
}

nav .menu {
  opacity: 0;
  visibility: hidden;
}

/*Mostrar menu - Show*/
/*o comando nav.show sem espaço funciona como se fosse um if. Se nav tiver a classe show, atribua as demais propriedades ao elemento com a classe menu dentro de nav.
A lógica disso é construída no JS*/
nav.show .menu {
  opacity: 1;
  visibility: visible;

  background: var(--body-color);

  height: 100vh; /*altura = 100% do viewport height, faz com que se altere de acordo com o dispositivo*/
  width: 100vw;

  position: fixed; /*joga o elemento para uma camada acima dos outros e mantem a posição fixa*/
  top: 0;
  left: 0;

  display: grid;
  place-content: center; /**/
}

nav.show ul.grid {
  gap: 4rem;
}

/* toggle menu */
/* Fechando e abertura do icone de close e menu*/
/*Classe toogle define as característigas usadas no ícone de menu e close*/
.toogle {
  color: var(--base-color);
  font-size: 1.5rem;
  cursor: pointer; /*Muda o ícone do mouse ao passar o mouse em cima do objeto*/
}

nav .icon-close {
  opacity: 0;
  visibility: hidden;

  position: absolute;
  right: 1.5rem;
}

nav.show .icon-close {
  opacity: 1;
  visibility: visible;
}

/*======= HOME ===========*/
#home {
  /*Corta tudo que estiver fora da área determinada pelo home*/
  overflow: hidden;
}

#home .container {
  /*joga todos os elementos do home para esquerda*/
  margin: 0;
}

#home .image {
  /*Definimos esse posicionamento como relativo para que o posicionamento do elemento fantasma sejarelativo em relação a imagem*/
  position: relative;
}

/*elemento fantasma, não aparece no códgio HTML*/
#home .image::before {
  content: '';
  height: 100%;
  width: 100%;
  /*posição definida como absolute, porém é relativa a imagem*/
  position: absolute;
  background: var(--base-color-second);
  /*porcentagens definidas com base no tamanho da imagem original*/
  top: -16.8%;
  left: 16.8%;
  /*garantia de que o elemento estará atrás da imagem*/
  z-index: 0;
}

#home .image img {
  position: relative;
  /*garante que a imagem esteja a uma distância específica da borda lateral direita*/
  right: 2.93rem;
}
/*definiçãode uma propriedade para 2 seletores*/
#home .image img,
#home .image::before {
  border-radius: 0.25rem;
}

#home .text {
  /*alinhamento horizontal*/
  margin-left: 1.5rem;
  margin-right: 1.5rem;
  /*alinhamento vertical*/
  text-align: center;
}

#home .text h1 {
  margin-bottom: 1rem;
}

#home .text p {
  margin-bottom: 2rem;
}
